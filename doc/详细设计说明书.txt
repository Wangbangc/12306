详细设计说明书
一、项目简介
参考12306站点进行设计，实现一个类12306售票系统，尽可能接近覆盖真实线上系统，实现的功能有但不限于：
购票服务
支付服务
注册服务
查询服务
个人信息管理
乘车人管理
会员管理
验证服务
支付后台服务
车站管理
车票管理
网关服务
订单管理

二、系统设计原则
1、用户友好性：确保系统的用户界面简洁、易于理解和操作，降低用户的学习成本。
2、可扩展性：考虑到业务发展的需要，系统应具备可扩展性，以适应未来的需求变化。
3、安全性：系统的设计必须严格遵循信息安全标准，确保数据隐私和保密性。
4、灵活性：能够灵活应对不同的业务需求，方便进行功能调整和扩展

三、开发环境
（1）使用框架：vue3，springboot
（2）开发语言：java

（3）开发工具：IDEA
（4）数据库：MySQL

四、功能设计
（1）会员服务
1）乘车人管理：根据用户名查询乘车人列表、根据乘车人 ID 集合查询乘车人列表、新增乘车人、修改乘车人、移除乘车人；
2）会员管理：根据用户名查询用户信息、检查用户名是否已存在、注册用户、用户登录、通过 Token 检查用户是否登录、用户退出登录。
（2）网关服务：验证用户是否登录、系统访问白名单、系统访问黑名单。
（3）购票服务
  1）车站管理：查询车站&城市站点集合信息、根据列车ID查询站点信息；
  2）车票管理
   a、根据条件查询车票；
   b、购买车票：高铁在线选座、多人邻座选择、创建车票订单；
   c、初始化任务：地区站点查询定时任务、站点详细信息定时任务、列车路线信息定时任务、列车站点余票定时任务。
（4）订单服务——订单管理
  1）创建车票订单：自定义订单号生成器、延迟关闭订单、防止订单重复提交；
  2）取消订单：订单状态反转；
  3）订单信息补充：支付回调；
  4）订单查询：敏感数据查询脱敏、敏感数据入库加密、乘车人查询本人订单。
（5）支付服务：
  1）支付管理：支付宝支付、微信支付、银行卡支付、支付状态查询。

五、系统设计
根据需求分析的结果，我们进行了系统的整体设计，如下
(1)架构设计:基于springboot，vue3
(2)界面设计：根据用户需求和操作习惯，我们设计了友好的用户界面，包括输入框、下拉框、按钮等元素。使用CSS制作了网页背景图、鼠标经过及选中导航变色效果、下划线等相关技术来美化相关界面，部分采用了javascript来做校验。 使用html5，以及css3等相关技术完成技术的布局，在本作品中，会使用常见的布局，常见的浮动布局，flex布局都会有使用到哦。同时在操作方面上运用了html5和css3，采用了div+css结构、表单、超链接、浮动、绝对定位、相对定位、字体样式、引用视频等基础知识，同时使用了一些js的相关知识。 
(3)接口设计：用户登入示例，通过登录，用户方可使用本软件，且我们可以根据用户存储相对于的资料等信息，接口地址为/api/user-service/v1/login，
请求参数：
{
    "usernameOrMailOrPhone": "zhangsan",
    "password": "doloreexcupidatat"
}
返回响应：
{
    "code": "0",
    "message": null,
    "data": {
        "username": "zhangsan",
        "realName": "张三",
        "accessToken": "eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2ODU1MzEzNzYsImlzcyI6ImNvbmdvLW1hbGwiLCJzdWIiOiJ7XCJwYXNzd29yZFwiOlwiMTIzNDU2XCIsXCJ1c2VybmFtZVwiOlwibWFjaGVuXCJ9IiwiZXhwIjoxNjg1NjE3Nzc2fQ.c1lzQt5phI0EHGhZaEfITV4eogs-l-KXhRUfvZonAK6xH1EGw7uoeFVDiK5eC4O_oA864GNPb5MqsRObhNTpkg"
    },
    "requestId": null,
    "success": true
}
六、数据库设计
1、数据库类型选择：根据系统需求和性能要求，选用关系型数据库MySQL
2、数据库表设计：根据系统功能需求，设计相应的数据库表，包括用户表、管理员表、订单表等。
3、数据库关联设计：通过主键和外键的设计，实现各表之间的关联关系。
7、测试与维护
1、测试
在完成详细设计后，我们将进行系统测试，包括单元测试、集成测试和系统测试。通过测试，我们将发现并修复可能存在的缺陷，确保系统的稳定性和可靠性。
2、维护
为了保持系统的正常运行，我们将制定维护计划，包括定期检查、升级和维护。在发现缺陷或需要进行功能扩展时，我们将及时进行修复或修改，以确保系统的持续可用性和安全性能。